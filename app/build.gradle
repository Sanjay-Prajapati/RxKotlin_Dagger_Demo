apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'



android {
    //type
    def STRING = "String"
    def RES_STRING = "string"

    //value
    def fbAppId = "109872926313335"
    def twitterAppKey = "03QuoQEGwRl8a5dhEMYkGGb3h"
    def twitterAppSecret = "PZFhyKrDzzKCO6Z4zduHPiNwUWZqo6UhWrPmS1wJj3hH5RqM75"

    //variable
    def FACEBOOK_APP_ID = "facebook_application_id"
    def FACEBOOK_LOGIN_PROTOCOL_SCHEME = "facebook_login_protocol_scheme"
    def TWITTER_CONSUMER_KEY = "twitter_consumer_key"
    def TWITTER_CONSUMER_SECRET = "twitter_consumer_secret"

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    flavorDimensions "api"
    defaultConfig {
        applicationId "com.rxkotlindaggerdemo"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue RES_STRING, FACEBOOK_APP_ID, fbAppId
        resValue RES_STRING, FACEBOOK_LOGIN_PROTOCOL_SCHEME, "fb${fbAppId}"
        resValue RES_STRING, TWITTER_CONSUMER_KEY, twitterAppKey
        resValue RES_STRING, TWITTER_CONSUMER_SECRET, twitterAppSecret

    }

    signingConfigs {
        debug {
            storeFile file("../release/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file("../release/release.jks")
            storePassword "RxKotlinD@ggerDemo"
            keyAlias "releasekey"
            keyPassword "RxKotlinD@ggerDemo"
        }
    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    productFlavors {
        dev {
            dimension "api"
        }
        staging {
            dimension "api"
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Testing Libraries
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation "junit:junit:$rootProject.jUnitVersion"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestImplementation 'com.android.support.test:runner:0.5'
    // Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.8.47'
    // Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:2.8.9'

    //kotlin library
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //constraint layout
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // Support Libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"

    // Networking + Parsing
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    devImplementation('com.readystatesoftware.chuck:library:1.0.4') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    stagingImplementation('com.readystatesoftware.chuck:library-no-op:1.0.4') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    // Json Serializer/De-Serializer
    implementation 'com.google.code.gson:gson:2.8.1'

    // Lazy Image Loading
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Timber Logger
    implementation 'com.jakewharton.timber:timber:4.5.1'

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    compile 'com.google.firebase:firebase-core:11.0.2'
    compile 'com.google.firebase:firebase-auth:11.0.2'
    // firebase authentication
    compile 'com.firebaseui:firebase-ui-auth:2.1.1'

    // Required only if Facebook login support is required
    compile('com.facebook.android:facebook-android-sdk:4.22.1')

    // Required only if Twitter login support is required
    compile("com.twitter.sdk.android:twitter-core:3.0.0@aar") { transitive = true }


}
apply plugin: 'com.google.gms.google-services'
